<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xs.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="com.xs.domain.Comment">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="type" column="type" jdbcType="TINYINT"/>
            <result property="songId" column="song_id" jdbcType="BIGINT"/>
            <result property="songListId" column="song_list_id" jdbcType="BIGINT"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="up" column="up" jdbcType="INTEGER"/>
    </resultMap>

    <delete id="deleteByUserId">
        delete comment from comment where user_id = #{id}
    </delete>

    <delete id="deleteBySongListId">
        delete comment from comment where song_list_id = #{id}
    </delete>

    <delete id="deleteBySongId">
        delete comment from comment where song_id = #{id}
    </delete>

    <select id="getAllComment" resultType="com.xs.domain.Comment">
        select id, user_id, type, song_id, song_list_id, content, create_time, up from comment
    </select>

    <select id="getAllCommentBySongListId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.song_list_id = #{id}
    </select>

    <select id="getAllCommentBySongId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.song_id = #{id}
    </select>

    <select id="getAllCommentByUserId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.user_id = #{id}
    </select>

    <select id="searchCommentByUserId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.user_id = #{id}
          and (c2.username like concat('%', #{keyWord}, '%')
          or c1.content like concat('%', #{keyWord}, '%'))
    </select>

    <select id="searchCommentBySongId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.song_id = #{id}
          and (c2.username like concat('%', #{keyWord}, '%')
            or c1.content like concat('%', #{keyWord}, '%'))
    </select>

    <select id="searchCommentBySongListId" resultType="com.xs.vo.CommentVo">
        select
            c1.id,
            c2.avatar,
            c2.username,
            c1.content,
            c1.create_time,
            c1.up
        from
            comment c1 inner join consumer c2 on c1.user_id = c2.id
        where
            c1.song_list_id = #{id}
          and (c2.username like concat('%', #{keyWord}, '%')
            or c1.content like concat('%', #{keyWord}, '%'))
    </select>

</mapper>
